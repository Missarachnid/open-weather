{"version":3,"sources":["components/Current.js","components/Details.js","components/DetailsToggle.js","components/Forecast.js","components/ForecastToggle.js","components/Header.js","components/Footer.js","actions/weatherActions.js","components/App.js","reducers/initialState.js","reducers/weatherReducer.js","reducers/inputReducer.js","reducers/forecastReducer.js","reducers/rootReducer.js","store.js","serviceWorker.js","index.js"],"names":["Current","render","react_default","a","createElement","className","id","_this","props","city","datetime","icon","weather","currenttemp","lowtemp","hightemp","React","Component","Details","wind","humidity","pressure","visibility","sunrise","sunset","DetailsToggle","handleClick","e","preventDefault","detailsToggle","onClick","Forecast","forecast","map","el","index","key","date","temp","concat","forecastToggle","axios","post","then","res","updateError","flagError","updateForecast","data","catch","err","console","log","Header","handleSubmit","isToggle","toggleForecast","isDetails","updateLoading","input","loadData","submitClear","href","onSubmit","placeholder","aria-label","onChange","onKeyup","value","required","type","Footer","target","rel","WEATHER_UPDATE","INPUT_UPDATE","SUBMIT_CLEAR","SEARCH_ERROR","DETAILS_TOGGLE","FORECAST_TOGGLE","FORECAST_UPDATE","LOADING","ERROR_TEXT","App","loading","role","Header_Header","toggleDetails","error","errortext","Current_Current","Details_Details","DetailsToggle_DetailsToggle","Forecast_Forecast","ForecastToggle_forecastToggle","components_Footer","_this2","this","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lon","longitude","message","connect","state","weatherReducer","inputReducer","forecastReducer","dispatch","payload","info","bool","forecasts","initialState","arguments","length","undefined","action","Object","objectSpread","rootReducer","combineReducers","store","createStore","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","es","components_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"uPAEqBA,6MACnBC,OAAS,kBACPC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCAAqCC,GAAG,WACrDJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,qBAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBAGnBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAaC,GAAG,QAAQC,EAAKC,MAAMC,MACjDP,EAAAC,EAAAC,cAAA,KAAGE,GAAG,QAAQC,EAAKC,MAAME,UACzBR,EAAAC,EAAAC,cAAA,OAAKE,GAAG,gBACRJ,EAAAC,EAAAC,cAAA,KAAGE,GAAG,WAAUJ,EAAAC,EAAAC,cAAA,KAAGC,UAAWE,EAAKC,MAAMG,OAAzC,WAAgEJ,EAAKC,MAAMI,UAE3EV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oCACbH,EAAAC,EAAAC,cAAA,KAAGE,GAAG,eAAeD,UAAU,8BAA8BE,EAAKC,MAAMK,YAAxE,UAEFX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQC,GAAG,YACxBJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKE,GAAG,YACNJ,EAAAC,EAAAC,cAAA,KAAGE,GAAG,iBAAiBC,EAAKC,MAAMM,QAAlC,YAGJZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKE,GAAG,aACNJ,EAAAC,EAAAC,cAAA,SAAIG,EAAKC,MAAMO,SAAf,+CAjCmBC,IAAMC,WCAtBC,6MAEnBjB,OAAS,kBACPC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCAAqCC,GAAG,WACrDJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAEjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,qBAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBAInBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mCACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAb,QACAH,EAAAC,EAAAC,cAAA,SAAIG,EAAKC,MAAMW,KAAf,QAEFjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gCACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAb,YACAH,EAAAC,EAAAC,cAAA,SAAIG,EAAKC,MAAMY,SAAf,OAIJlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iCACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAb,YACAH,EAAAC,EAAAC,cAAA,SAAIG,EAAKC,MAAMa,SAAf,OAEFnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,6BACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAb,cACAH,EAAAC,EAAAC,cAAA,SAAIG,EAAKC,MAAMc,WAAf,QAIJpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,+BACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAb,WACAH,EAAAC,EAAAC,cAAA,SAAIG,EAAKC,MAAMe,UAEjBrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,8BACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAb,UACAH,EAAAC,EAAAC,cAAA,SAAIG,EAAKC,MAAMgB,6CAvDMR,IAAMC,WCAtBQ,6MAEnBC,YAAc,SAACC,GAEb,GADAA,EAAEC,iBACqB,OAApBrB,EAAKC,MAAMC,KACZ,OAAO,EAEPF,EAAKC,MAAMqB,mBAIf5B,OAAS,kBACPC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCAAqCC,GAAG,kBACrDJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAMyB,QAAS,SAAAH,GAAC,OAAIpB,EAAKmB,YAAYC,KAClDzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAb,YAEAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAb,MAEAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6CAxBgBW,IAAMC,WCA5Bc,6MACnB9B,OAAS,kBACPC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCAAqCC,GAAG,YACrDJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,sBAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBAGnBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAEXE,EAAKC,MAAMwB,SAASC,IAAI,SAACC,EAAIC,GAC3B,OACEjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO+B,IAAKD,GACzBjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAiB6B,EAAGG,OAEnCnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAiB6B,EAAGI,KAAjC,SAEFpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAS,iBAAAkC,OAAmBL,EAAGvB,iDA/BtBK,IAAMC,2BCCvBuB,6MACnBd,YAAc,SAACC,GAEb,GADAA,EAAEC,iBACqB,OAApBrB,EAAKC,MAAMC,KACZ,OAAO,EAEPgC,IAAMC,KAAK,YAAa,CAACjC,KAAMF,EAAKC,MAAMC,OACzCkC,KAAK,SAACC,GAEa,kBAARA,GACRrC,EAAKC,MAAMqC,YAAYD,GACvBrC,EAAKC,MAAMsC,WAAU,KAErBvC,EAAKC,MAAMuC,eAAeH,EAAII,MAC9BzC,EAAKC,MAAMgC,oBAGdS,MAAM,SAAAC,GACLC,QAAQC,IAAI,4BAA6BF,GACzC3C,EAAKC,MAAMsC,WAAU,GACrBvC,EAAKC,MAAMqC,YAAY,kCAM7B5C,OAAS,kBACPC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCAAqCC,GAAG,mBACrDJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAMyB,QAAS,SAAAH,GAAC,OAAIpB,EAAKmB,YAAYC,KAClDzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAb,aAEAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAb,MAEAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6CAvCeW,IAAMC,WCA7BoC,6MAEnBC,aAAe,SAAC3B,GACdA,EAAEC,kBAGyB,IAAxBrB,EAAKC,MAAM+C,UACZhD,EAAKC,MAAMgD,kBAIe,IAAzBjD,EAAKC,MAAMiD,WACZlD,EAAKC,MAAMqB,gBAIbtB,EAAKC,MAAMsC,WAAU,GACrBvC,EAAKC,MAAMqC,YAAY,IACvBtC,EAAKC,MAAMkD,gBAGXjB,IAAMC,KAAK,UAAW,CAACjC,KAAMF,EAAKC,MAAMmD,QACvChB,KAAK,SAAAC,GACJrC,EAAKC,MAAMkD,gBAEK,UAAbd,EAAII,MACLzC,EAAKC,MAAMsC,WAAU,GACrBvC,EAAKC,MAAMqC,YAAY,uBAEvBtC,EAAKC,MAAMoD,SACT,CAACnD,KAAQ,KACXC,SAAY,KACZG,YAAe,KACfC,QAAW,KACXC,SAAY,KACZJ,KAAQ,KACRC,QAAW,KACXO,KAAQ,KACRC,SAAY,KACZC,SAAY,KACZC,WAAc,KACdC,QAAW,KACXC,OAAU,OAGV2B,QAAQC,IAAIR,EAAII,MAChBzC,EAAKC,MAAMqD,cACXtD,EAAKC,MAAMsC,WAAU,GACrBvC,EAAKC,MAAMqC,YAAY,4BAGvBtC,EAAKC,MAAMoD,SAAShB,EAAII,MACxBzC,EAAKC,MAAMqD,iBAGdZ,MAAM,SAAAC,GACLC,QAAQC,IAAI,4BAA6BF,GACzC3C,EAAKC,MAAMqD,cACXtD,EAAKC,MAAMkD,gBACXnD,EAAKC,MAAMsC,WAAU,GACrBvC,EAAKC,MAAMqC,YAAY,2BAI3B5C,OAAS,kBACPC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sCAAsCC,GAAG,iBACtDJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oDACbH,EAAAC,EAAAC,cAAA,KAAG0D,KAAK,KACR5D,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeC,GAAG,aAC/BJ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAgBC,GAAG,cADhC,kBAKFJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,4CAA4C0D,SAAU,SAAApC,GAAC,OAAIpB,EAAK+C,aAAa3B,KAC3FzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcC,GAAG,SAChCJ,EAAAC,EAAAC,cAAA,SAAO4D,YAAY,kBAAkBC,aAAW,SAChDC,SAAW,SAAAvC,GAAC,OAAIpB,EAAKC,MAAM2D,QAAQxC,IACnCyC,MAAO7D,EAAKC,MAAMmD,MAAOrD,GAAG,eAAe+D,UAAQ,IACjDnE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,MAAOC,GAAG,aAAagE,KAAK,UAA9C,gDAnFgBtD,IAAMC,WCe3BsD,EAhBA,SAAC/D,GAAD,OACbN,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAChBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eACXH,EAAAC,EAAAC,cAAA,KAAG0D,KAAK,sBAAsBU,OAAO,SAASC,IAAI,uBAAlD,oBAGJvE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eACXH,EAAAC,EAAAC,cAAA,KAAG0D,KAAK,+CAA+CU,OAAO,SAASC,IAAI,uBAA3E,iDCZGC,EAAiB,CAACJ,KAAM,kBACxBK,EAAe,CAACL,KAAM,gBACtBM,EAAe,CAACN,KAAM,gBACtBO,EAAe,CAACP,KAAM,gBACtBQ,EAAiB,CAACR,KAAM,kBACxBS,EAAkB,CAACT,KAAM,mBACzBU,EAAkB,CAACV,KAAM,mBACzBW,EAAU,CAACX,KAAM,WACjBY,EAAa,CAACZ,KAAM,cCyE1Ba,6MAkCLlF,OAAS,kBACPC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBC,GAAG,WAGlCC,EAAKC,MAAM4E,QACTlF,EAAAC,EAAAC,cAAA,OAAKE,GAAG,UACNJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoBgF,KAAK,UACtCnF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAAhB,eAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoBgF,KAAK,UACtCnF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAAhB,eAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoBgF,KAAK,UACtCnF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAAhB,gBAGJ,KAGFH,EAAAC,EAAAC,cAACkF,EAAD,CACE3B,MAAOpD,EAAKC,MAAMmD,MAClBQ,QAAS5D,EAAKC,MAAM2D,QACpBN,YAAatD,EAAKC,MAAMqD,YACxBD,SAAUrD,EAAKC,MAAMoD,SACrBd,UAAWvC,EAAKC,MAAMsC,UACtBY,cAAenD,EAAKC,MAAMkD,cAC1BF,eAAgBjD,EAAKC,MAAMgD,eAC3BD,SAAUhD,EAAKC,MAAMgC,eACrBK,YAAatC,EAAKC,MAAMqC,YACxBhB,cAAetB,EAAKC,MAAM+E,cAC1B9B,UAAWlD,EAAKC,MAAMqB,gBAIxBtB,EAAKC,MAAMgF,MACRtF,EAAAC,EAAAC,cAAA,OAAKE,GAAG,SACTJ,EAAAC,EAAAC,cAAA,SAAIG,EAAKC,MAAMiF,YACL,KAGZvF,EAAAC,EAAAC,cAACsF,EAAD,CACEjF,KAAMF,EAAKC,MAAMC,KACjBC,SAAUH,EAAKC,MAAME,SACrBC,KAAMJ,EAAKC,MAAMG,KACjBC,QAASL,EAAKC,MAAMI,QACpBC,YAAaN,EAAKC,MAAMK,YACxBC,QAASP,EAAKC,MAAMM,QACpBC,SAAUR,EAAKC,MAAMO,WAIrBR,EAAKC,MAAMqB,cACZ3B,EAAAC,EAAAC,cAACuF,EAAD,CACDxE,KAAMZ,EAAKC,MAAMW,KACjBC,SAAUb,EAAKC,MAAMY,SACrBC,SAAUd,EAAKC,MAAMa,SACrBC,WAAYf,EAAKC,MAAMc,WACvBC,QAAShB,EAAKC,MAAMe,QACpBC,OAAQjB,EAAKC,MAAMgB,SAGlBtB,EAAAC,EAAAC,cAACwF,EAAD,CACD/D,cAAetB,EAAKC,MAAM+E,cAC1B9E,KAAMF,EAAKC,MAAMC,OAKfF,EAAKC,MAAMgC,eACbtC,EAAAC,EAAAC,cAACyF,EAAD,CACE7D,SAAUzB,EAAKC,MAAMwB,WAGvB9B,EAAAC,EAAAC,cAAC0F,EAAD,CACAtD,eAAgBjC,EAAKC,MAAMgD,eAC3BT,eAAgBxC,EAAKC,MAAMuC,eAC3BtC,KAAMF,EAAKC,MAAMC,KACjBiD,cAAenD,EAAKC,MAAMkD,cAC1Bb,YAAatC,EAAKC,MAAMqC,cAIxB3C,EAAAC,EAAAC,cAAC2F,EAAD,4FAlHiB,IAAAC,EAAAC,KAEhBC,UAAUC,aAEXF,KAAKzF,MAAMkD,gBACXuC,KAAKzF,MAAMsC,WAAU,GACrBoD,UAAUC,YAAYC,mBAAmB,SAAAC,GACvC5D,IAAMC,KAAK,QAAS,CAAC4D,IAAKD,EAASE,OAAOC,SAAUC,IAAKJ,EAASE,OAAOG,YACxE/D,KAAK,SAAAC,GACJoD,EAAKxF,MAAMoD,SAAShB,EAAII,MACxBgD,EAAKxF,MAAMkD,kBAEZT,MAAM,SAAAC,GACLC,QAAQC,IAAI,8BAA+BF,GAC3C8C,EAAKxF,MAAMkD,gBACXsC,EAAKxF,MAAMsC,WAAU,GACrBkD,EAAKxF,MAAMqC,YAAY,yBAGxB,SAACK,GACFC,QAAQC,IAAI,4BAA6BF,GACzC8C,EAAKxF,MAAMsC,WAAU,GACrBkD,EAAKxF,MAAMqC,YAAYK,EAAIyD,SAC3BX,EAAKxF,MAAMkD,cAAc,2BAG3BuC,KAAKzF,MAAMkD,gBACXuC,KAAKzF,MAAMsC,WAAU,GACrBmD,KAAKzF,MAAMqC,YAAY,+BA9BV7B,IAAMC,WAyHV2F,cAjLS,SAAAC,GACtB,MAAO,CACLpG,KAAMoG,EAAMC,eAAerG,KAC3BC,SAAUmG,EAAMC,eAAepG,SAC/BG,YAAagG,EAAMC,eAAejG,YAClCC,QAAS+F,EAAMC,eAAehG,QAC9BC,SAAU8F,EAAMC,eAAe/F,SAC/BJ,KAAMkG,EAAMC,eAAenG,KAC3BC,QAASiG,EAAMC,eAAelG,QAC9BO,KAAM0F,EAAMC,eAAe3F,KAC3BC,SAAUyF,EAAMC,eAAe1F,SAC/BC,SAAUwF,EAAMC,eAAezF,SAC/BC,WAAYuF,EAAMC,eAAexF,WACjCC,QAASsF,EAAMC,eAAevF,QAC9BC,OAAQqF,EAAMC,eAAetF,OAC7BmC,MAAOkD,EAAME,aAAapD,MAC1B6B,MAAOqB,EAAME,aAAavB,MAC1B3D,cAAegF,EAAMC,eAAejF,cACpCW,eAAgBqE,EAAMC,eAAetE,eACrCR,SAAU6E,EAAMG,gBAAgBhF,SAChCoD,QAASyB,EAAMC,eAAe1B,QAC9BK,UAAWoB,EAAME,aAAatB,YAIP,SAAAwB,GAAQ,MAAK,CACtCrD,SAAU,SAACZ,GACTiE,EAAS,CAAC3C,KAAMI,EAAgBwC,QAASlE,KAE3CmB,QAAS,SAACgD,GACRF,EAAS,CAAC3C,KAAMK,EAAcuC,QAASC,KAEzCtD,YAAa,WACXoD,EAAS,CAAC3C,KAAMM,KAElB9B,UAAW,SAACsE,GACVH,EAAS,CAAC3C,KAAMO,EAAcqC,QAASE,KAEzC7B,cAAe,WACb0B,EAAS,CAAC3C,KAAMQ,KAElBtB,eAAgB,WACdyD,EAAS,CAAC3C,KAAMS,KAElBhC,eAAgB,SAACsE,GACfJ,EAAS,CAAC3C,KAAMU,EAAiBkC,QAASG,KAE5C3D,cAAe,WACbuD,EAAS,CAAC3C,KAAMW,KAElBpC,YAAa,SAAC8D,GACZM,EAAS,CAAC3C,KAAMY,EAAYgC,QAASP,OA8H1BC,CAA6CzB,kBCnL7CmC,EAvBM,CACnB7G,KAAQ,KACRC,SAAY,KACZG,YAAe,KACfC,QAAW,KACXC,SAAY,KACZJ,KAAQ,KACRC,QAAW,KACXO,KAAQ,KACRC,SAAY,KACZC,SAAY,KACZC,WAAc,KACdC,QAAW,KACXC,OAAU,KACVmC,MAAS,GACT6B,OAAS,EACT3D,eAAiB,EACjBW,gBAAkB,EAClBR,SAAY,GACZoD,SAAW,EACXK,UAAa,IC0BAqB,EA3CQ,WAAkC,IAAjCD,EAAiCU,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBD,EAAcI,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACvD,OAAOC,EAAOpD,MACZ,KAAKI,EACH,OAAOiD,OAAAC,EAAA,EAAAD,CAAA,GACFd,EADL,CAEEpG,KAAMiH,EAAOR,QAAQzG,KACrBC,SAAUgH,EAAOR,QAAQxG,SACzBG,YAAa6G,EAAOR,QAAQrG,YAC5BC,QAAS4G,EAAOR,QAAQpG,QACxBC,SAAU2G,EAAOR,QAAQnG,SACzBJ,KAAM+G,EAAOR,QAAQvG,KACrBC,QAAS8G,EAAOR,QAAQtG,QACxBO,KAAMuG,EAAOR,QAAQ/F,KACrBC,SAAUsG,EAAOR,QAAQ9F,SACzBC,SAAUqG,EAAOR,QAAQ7F,SACzBC,WAAYoG,EAAOR,QAAQ5F,WAC3BC,QAASmG,EAAOR,QAAQ3F,QACxBC,OAAQkG,EAAOR,QAAQ1F,SAG3B,KAAKsD,EACH,OAAO6C,OAAAC,EAAA,EAAAD,CAAA,GACFd,EADL,CAEAhF,eAAgBgF,EAAMhF,gBAGxB,KAAKkD,EACH,OAAO4C,OAAAC,EAAA,EAAAD,CAAA,GACFd,EADL,CAEErE,gBAAiBqE,EAAMrE,iBAG3B,KAAKyC,EACH,OAAO0C,OAAAC,EAAA,EAAAD,CAAA,GACFd,EADL,CAEEzB,SAAUyB,EAAMzB,UAGpB,QACE,OAAOyB,ICREE,EA/BM,WAAkC,IAAjCF,EAAiCU,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBD,EAAcI,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrD,OAAOC,EAAOpD,MACZ,KAAKK,EACH,OAAOgD,OAAAC,EAAA,EAAAD,CAAA,GACFd,EADL,CAEElD,MAAO+D,EAAOR,QAAQ1C,OAAOJ,QAGjC,KAAKQ,EACH,OAAO+C,OAAAC,EAAA,EAAAD,CAAA,GACFd,EADL,CAEElD,MAAO,KAGX,KAAKkB,EACH,OAAO8C,OAAAC,EAAA,EAAAD,CAAA,GACFd,EADL,CAEErB,MAAOkC,EAAOR,UAGlB,KAAKhC,EACH,OAAAyC,OAAAC,EAAA,EAAAD,CAAA,GACKd,EADL,CAEEpB,UAAWiC,EAAOR,UAGtB,QACE,OAAOL,ICbEG,EAdS,WAAkC,IAAjCH,EAAiCU,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBD,EAAcI,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACxD,OAAOC,EAAOpD,MACZ,KAAKU,EACH,OAAO2C,OAAAC,EAAA,EAAAD,CAAA,GACFd,EADL,CAEE7E,SAAU0F,EAAOR,UAIrB,QACE,OAAOL,ICFEgB,EANKC,YAAgB,CAClChB,eAAgBA,EAChBC,aAAcA,EACdC,gBAAiBA,ICLNe,EAAQC,YAAYH,GCS3BI,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAuCN,SAASC,EAAgBC,EAAOC,GAC9BvC,UAAUwC,cACPC,SAASH,GACT7F,KAAK,SAAAiG,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBjC,QACfX,UAAUwC,cAAcO,YAI1B9F,QAAQC,IACN,iHAKEqF,GAAUA,EAAOS,UACnBT,EAAOS,SAASN,KAMlBzF,QAAQC,IAAI,sCAGRqF,GAAUA,EAAOU,WACnBV,EAAOU,UAAUP,UAO5B3F,MAAM,SAAAuC,GACLrC,QAAQqC,MAAM,4CAA6CA,KCzFjE4D,IAASnJ,OACPC,EAAAC,EAAAC,cAACiJ,EAAA,EAAD,CAAUtB,MAAOA,GACf7H,EAAAC,EAAAC,cAACkJ,EAAD,OACWC,SAASC,eAAe,SDWhC,SAAkBf,GACvB,GAA6C,kBAAmBvC,UAAW,CAGzE,GADkB,IAAIuD,IAAIC,GAAwBvB,OAAOC,SAAStE,MACpD6F,SAAWxB,OAAOC,SAASuB,OAIvC,OAGFxB,OAAOyB,iBAAiB,OAAQ,WAE9B,IAAMpB,EAAK,GAAAjG,OAAMmH,GAAN,UAEPzB,GAgEV,SAAiCO,EAAOC,GAEtCoB,MAAMrB,GACH7F,KAAK,SAAAmH,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5CjE,UAAUwC,cAAc0B,MAAMzH,KAAK,SAAAiG,GACjCA,EAAayB,aAAa1H,KAAK,WAC7BwF,OAAOC,SAASkC,aAKpB/B,EAAgBC,EAAOC,KAG1BxF,MAAM,WACLE,QAAQC,IACN,mEArFAmH,CAAwB/B,EAAOC,GAI/BvC,UAAUwC,cAAc0B,MAAMzH,KAAK,WACjCQ,QAAQC,IACN,gHAMJmF,EAAgBC,EAAOC,MCnC/BC","file":"static/js/main.3423b589.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default class Current extends React.Component {\n  render = () => (\n    <div className=\"d-flex justify-content-center\">\n      <div className=\"card d-flex justify-content-center\" id=\"current\">\n        <div className=\"card-body\">\n        <div className=\"row\">\n            <div className=\"col-4\">\n            <div className=\"details-seperator\"></div>\n            </div>\n            <div className=\"col-4\">\n              <p>current</p>\n            </div>\n            <div className=\"col-4\">\n              <div className=\"details-seperator\"></div>\n            </div>\n          </div>\n          <h1 className=\"card-title\" id=\"city\">{this.props.city}</h1>\n          <p id=\"date\">{this.props.datetime}</p>\n          <div id=\"weather-text\">\n          <p id=\"weather\"><i className={this.props.icon}></i>&nbsp;&nbsp;{this.props.weather}</p>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-8 d-flex justify-content-end\">\n              <p id=\"current-temp\" className=\"d-flex justify-content-end\">{this.props.currenttemp} &#176;</p>\n            </div>\n            <div className=\"col-4\" id=\"low-high\">\n              <div className=\"row\">\n                <div id=\"low-temp\">\n                  <p id=\"low-temp-text\">{this.props.lowtemp}&#8457;</p>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div id=\"high-temp\">\n                  <p>{this.props.hightemp}&#8457;</p>\n                </div>\n              </div>  \n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}","import React from \"react\";\n\nexport default class Details extends React.Component {\n  \n  render = () => (\n    <div>\n      <div className=\"d-flex justify-content-center\">\n        <div className=\"card d-flex justify-content-center\" id=\"details\">\n          <div className=\"card-body\">\n          <div className=\"hidden-card\">\n            <div className=\"row\">\n              <div className=\"col-4\">\n                <div className=\"details-seperator\"></div>\n              </div>\n              <div className=\"col-4\">\n                <p>details</p>\n              </div>\n              <div className=\"col-4\">\n                <div className=\"details-seperator\"></div>\n              </div>\n            </div>\n\n            <div className=\"row weather-row\">\n              <div className=\"col-6 weather-blocks\">\n                <i className=\"wi wi-strong-wind weather-icon\"></i>\n                <p className=\"details-data\">wind</p>\n                <p>{this.props.wind}mph</p>\n              </div>\n              <div className=\"col-6 weather-blocks\">\n                <i className=\"wi wi-humidity weather-icon\" ></i>\n                <p className=\"details-data\">humidity</p>\n                <p>{this.props.humidity}%</p>\n              </div>\n            </div>        \n\n            <div className=\"row weather-row\">\n              <div className=\"col-6 weather-blocks\">\n                <i className=\"wi wi-barometer weather-icon\"></i>\n                <p className=\"details-data\">pressure</p>\n                <p>{this.props.pressure}in</p>\n              </div>\n              <div className=\"col-6 weather-blocks\">\n                <i className=\"wi wi-cloud weather-icon\" ></i>\n                <p className=\"details-data\">visibility</p>\n                <p>{this.props.visibility}mi</p>\n              </div>\n            </div>     \n\n            <div className='row weather-row'>\n              <div className='col-6 weather-blocks'>\n                <i className=\"wi wi-sunrise weather-icon\"></i>\n                <p className='details-data'>sunrise</p>\n                <p>{this.props.sunrise}</p>\n              </div>\n              <div className='col-6 weather-blocks'>\n                <i className=\"wi wi-sunset weather-icon\" ></i>\n                <p className='details-data'>sunset</p>\n                <p>{this.props.sunset}</p>\n              </div>\n            </div>   \n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  )\n}","import React from \"react\";\n\nexport default class DetailsToggle extends React.Component {\n  //on click details window is opened, unless city doesn't exist or offline\n  handleClick = (e) => {\n    e.preventDefault();\n    if(this.props.city === null){\n      return false;\n    } else {\n      this.props.detailsToggle();\n    }\n  }\n  \n  render = () => (\n    <div className='d-flex justify-content-center'>\n      <div className=\"card d-flex justify-content-center\" id='details-toggle'>\n        <div className=\"card-body\">\n        <div className='show-data'>\n          <div className='row' onClick={e => this.handleClick(e)}>\n            <div className=\"col-3\"></div>\n            <div className=\"col-4\">\n            <p className=\"toggle-button\">details</p>\n            </div>\n            <div className=\"col-2\">\n            <p className=\"toggle-button\">+</p>\n            </div>\n            <div className=\"col-3\"></div>\n          </div>\n        </div>          \n      </div>\n    </div>\n  </div>\n  )\n}\n","import React from \"react\";\n\nexport default class Forecast extends React.Component {\n  render = () => (\n    <div>\n      <div className=\"d-flex justify-content-center\">\n        <div className=\"card d-flex justify-content-center\" id=\"forecast\">\n          <div className=\"card-body\">\n          <div className=\"hidden-card\">\n            <div className=\"row\">\n              <div className=\"col-3\">\n              <div className=\"details-seperator\"></div>\n              </div>\n              <div className=\"col-6\">\n                <p>forecast</p>\n              </div>\n              <div className=\"col-3\">\n                <div className=\"details-seperator\"></div>\n              </div>\n            </div>\n            <div className=\"forecast-block\">\n              {/*Shows code block for each item in array of forecasts */\n                this.props.forecast.map((el, index) => {\n                  return (\n                    <div className=\"slot\" key={index}>\n                      <div className=\"row\" >\n                        <div className=\"col-5\">\n                          <p className=\"forecast-date\">{el.date}</p>\n                        </div>\n                        <div className=\"col-3\">\n                          <p className=\"forecast-temp\">{el.temp}&#176;</p>\n                        </div>\n                        <div className=\"col-4\">\n                          <i className={`forecast-icon ${el.icon}`}></i>\n                        </div>\n                      </div>\n                    </div>\n                  );\n                })\n              }\n            </div>\n          </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}","import React from \"react\";\nimport axios from \"axios\";\n\nexport default class forecastToggle extends React.Component {\n  handleClick = (e) => {\n    e.preventDefault();\n    if(this.props.city === null){\n      return false;\n    } else {\n      axios.post(\"/forecast\", {city: this.props.city})\n      .then((res) => {\n        //if the response is a string, it is an error sent back from the server\n        if(typeof res === \"string\" ) {\n          this.props.updateError(res);\n          this.props.flagError(true);\n        } else {\n          this.props.updateForecast(res.data);\n          this.props.forecastToggle();\n        }\n      })\n      .catch(err => {\n        console.log(\"Error retrieving forecast\", err);\n        this.props.flagError(true);\n        this.props.updateError(\"Error retrieving forecast\");\n      });\n    }\n    \n  }\n  \n  render = () => (\n    <div className=\"d-flex justify-content-center\">\n      <div className=\"card d-flex justify-content-center\" id=\"forecast-toggle\">\n        <div className=\"card-body\">\n          <div className=\"show-data\">\n            <div className=\"row\" onClick={e => this.handleClick(e)}>\n              <div className=\"col-2\"></div>\n              <div className=\"col-5\">\n              <p className=\"toggle-button\">forecast</p>\n              </div>\n              <div className=\"col-2\">\n              <p className=\"toggle-button\">+</p>\n              </div>\n              <div className=\"col-3\"></div>\n            </div>\n          </div>          \n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from \"react\";\nimport axios from \"axios\";\n\nexport default class Header extends React.Component {\n  //Search for city or zipcode\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    //This closes the forecast window if it is open\n    if(this.props.isToggle === true){\n      this.props.toggleForecast();\n    }\n\n    //This closes the details window if it is open\n    if(this.props.isDetails === true){\n      this.props.detailsToggle();\n    }\n    \n    //resets any errors being displaed and starts the loading screen\n    this.props.flagError(false);\n    this.props.updateError(\"\");\n    this.props.updateLoading();\n    \n    //fetch data from server\n    axios.post(\"/search\" ,{city: this.props.input})\n    .then(res => {\n      this.props.updateLoading();\n      //if the obj returned is an error\n      if(res.data === \"error\"){\n        this.props.flagError(true);\n        this.props.updateError(\"City does not exist\");\n        //reset the state data on city\n        this.props.loadData(\n          {\"city\": null,\n        \"datetime\": null,\n        \"currenttemp\": null,\n        \"lowtemp\": null,\n        \"hightemp\": null,\n        \"icon\": null,\n        \"weather\": null,\n        \"wind\": null,\n        \"humidity\": null,\n        \"pressure\": null,\n        \"visibility\": null,\n        \"sunrise\": null,\n        \"sunset\": null\n      });\n        //sho error and clear search\n        console.log(res.data);\n        this.props.submitClear()\n        this.props.flagError(true);\n        this.props.updateError(\"This city doen't exist\");\n      } else {\n        //update city weather data\n        this.props.loadData(res.data);\n        this.props.submitClear();\n      }\n    })\n    .catch(err => {\n      console.log(\"error searching for city \", err);\n      this.props.submitClear();\n      this.props.updateLoading();\n      this.props.flagError(true);\n      this.props.updateError(\"You may be offline\");\n    })\n  }\n\n  render = () => (\n    <div className=\"header\">\n      <nav className=\"navbar\">\n        <div className=\"d-flex justify-content-center w-100\" id=\"nav-container\">\n          <div className=\"row w-100\">\n            <div className=\"col-md-6 col-sm-12 d-flex justify-content-center\">\n              <a href=\"/\">\n              <p className=\"navbar-brand\" id=\"logo-text\"> \n              <i className=\"wi wi-sunrise\" id=\"logo-icon\"></i>\n              &nbsp;Weather </p>\n              </a>\n            </div>\n            <div className=\"col-md-6 col-sm-12\">\n              <form className=\"form-inline d-flex justify-content-center\" onSubmit={e => this.handleSubmit(e)}>\n                <div className=\"input-group\" id=\"input\">\n                <input placeholder=\"City or Zipcode\" aria-label=\"Search\" \n                onChange={ e => this.props.onKeyup(e)} \n                value={this.props.input} id=\"search-input\" required/>\n                  <div className=\"input-group-append\">\n                    <button className=\"btn\"  id=\"search-btn\" type=\"submit\" >Search</button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </nav>\n    </div>\n  )\n}","import React from \"react\";\n\nconst Footer = (props) => (\n  <footer className=\"w-100\">\n    <div className=\"row\">\n      <div className=\"col-6\">\n        <p className=\"footer-link\">\n          <a href=\"http://mmkepler.com\" target=\"_blank\" rel=\"noopener noreferrer\">Melissa Kepler</a>\n        </p>\n      </div>\n      <div className=\"col-6\">\n        <p className=\"footer-link\">\n          <a href=\"https://github.com/Missarachnid/open-weather\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a>\n        </p>\n      </div>\n    </div>\n  </footer>\n);\nexport default Footer;","export const WEATHER_UPDATE = {type: 'WEATHER_UPDATE'};\nexport const INPUT_UPDATE = {type: 'INPUT_UPDATE'};\nexport const SUBMIT_CLEAR = {type: 'SUBMIT_CLEAR'};\nexport const SEARCH_ERROR = {type: 'SEARCH_ERROR'};\nexport const DETAILS_TOGGLE = {type: 'DETAILS_TOGGLE'};\nexport const FORECAST_TOGGLE = {type: 'FORECAST_TOGGLE'};\nexport const FORECAST_UPDATE = {type: 'FORECAST_UPDATE'};\nexport const LOADING = {type: 'LOADING'};\nexport const ERROR_TEXT = {type: 'ERROR_TEXT'}","import React from \"react\";\nimport Current from \"./Current\";\nimport Details from \"./Details\";\nimport DetailsToggle from \"./DetailsToggle\";\nimport Forecast from \"./Forecast\";\nimport ForecastToggle from \"./ForecastToggle\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport \"typeface-roboto\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./css/App.css\";\nimport \"./css/weather-icons.min.css\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\n//actions \nimport { WEATHER_UPDATE, \n  INPUT_UPDATE, \n  SUBMIT_CLEAR, \n  SEARCH_ERROR, \n  DETAILS_TOGGLE, \n  FORECAST_TOGGLE, \n  FORECAST_UPDATE, \n  LOADING,\n  ERROR_TEXT } from \"../actions/weatherActions\";\n  \nconst mapStateToProps = state => {\n  return {\n    city: state.weatherReducer.city,\n    datetime: state.weatherReducer.datetime,\n    currenttemp: state.weatherReducer.currenttemp,\n    lowtemp: state.weatherReducer.lowtemp,\n    hightemp: state.weatherReducer.hightemp,\n    icon: state.weatherReducer.icon,\n    weather: state.weatherReducer.weather,\n    wind: state.weatherReducer.wind,\n    humidity: state.weatherReducer.humidity,\n    pressure: state.weatherReducer.pressure,\n    visibility: state.weatherReducer.visibility,\n    sunrise: state.weatherReducer.sunrise,\n    sunset: state.weatherReducer.sunset,\n    input: state.inputReducer.input,\n    error: state.inputReducer.error,\n    detailsToggle: state.weatherReducer.detailsToggle,\n    forecastToggle: state.weatherReducer.forecastToggle,\n    forecast: state.forecastReducer.forecast,\n    loading: state.weatherReducer.loading,\n    errortext: state.inputReducer.errortext\n  }\n};\n\nconst mapDispatchToProps = dispatch => ({\n  loadData: (data) => {\n    dispatch({type: WEATHER_UPDATE, payload: data})\n  },\n  onKeyup: (info) => {\n    dispatch({type: INPUT_UPDATE, payload: info})\n  },\n  submitClear: () => {\n    dispatch({type: SUBMIT_CLEAR})\n  },\n  flagError: (bool) => {\n    dispatch({type: SEARCH_ERROR, payload: bool})\n  },\n  toggleDetails: () => {\n    dispatch({type: DETAILS_TOGGLE})\n  },\n  toggleForecast: () => {\n    dispatch({type: FORECAST_TOGGLE})\n  },\n  updateForecast: (forecasts) => {\n    dispatch({type: FORECAST_UPDATE, payload: forecasts})\n  },\n  updateLoading: () => {\n    dispatch({type: LOADING})\n  },\n  updateError: (message) => {\n    dispatch({type: ERROR_TEXT, payload: message})\n  }\n});\n\n\n class App extends React.Component {\n\n  componentWillMount() {\n    //requests geolocation data, and sends request for local conditions to server\n    if(navigator.geolocation){\n      //start loading and reset any errors showing\n      this.props.updateLoading();\n      this.props.flagError(false);\n      navigator.geolocation.getCurrentPosition(position => { \n        axios.post(\"/find\", {lat: position.coords.latitude, lon: position.coords.longitude})\n        .then(res => {\n          this.props.loadData(res.data);\n          this.props.updateLoading();\n        })\n        .catch(err => {\n          console.log(\"error loading forecast data\", err);\n          this.props.updateLoading();\n          this.props.flagError(true);\n          this.props.updateError(\"You may be offline\");\n          \n        })\n      }, (err) => {\n        console.log(\"error requesting forecast\", err)\n        this.props.flagError(true)\n        this.props.updateError(err.message);\n        this.props.updateLoading(\"Geolocation blocked\");\n      });\n    } else {\n      this.props.updateLoading();\n      this.props.flagError(true);\n      this.props.updateError(\"Geolocation blocked\");\n    }\n  }\n\n  render = () => (\n    <div className=\"container-fluid\" id=\"main-bg\">\n\n    {\n      this.props.loading ? \n        <div id=\"notice\" >\n          <div className=\"spinner-grow spin\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </div>\n          <div className=\"spinner-grow spin\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </div>\n          <div className=\"spinner-grow spin\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </div>\n        </div>\n      : null\n    }     \n\n      <Header\n        input={this.props.input}\n        onKeyup={this.props.onKeyup}\n        submitClear={this.props.submitClear}\n        loadData={this.props.loadData}\n        flagError={this.props.flagError}\n        updateLoading={this.props.updateLoading}\n        toggleForecast={this.props.toggleForecast}\n        isToggle={this.props.forecastToggle}\n        updateError={this.props.updateError}\n        detailsToggle={this.props.toggleDetails}\n        isDetails={this.props.detailsToggle}\n      />\n      \n      { /* Shows error on screen */\n      this.props.error ? \n        (<div id=\"alert\">\n        <p>{this.props.errortext}</p>\n        </div>) : null\n      }\n      \n      <Current \n        city={this.props.city}\n        datetime={this.props.datetime}\n        icon={this.props.icon}\n        weather={this.props.weather}\n        currenttemp={this.props.currenttemp}\n        lowtemp={this.props.lowtemp}\n        hightemp={this.props.hightemp}\n      />\n\n      { /*Shows details card expanded if clicked, else shows details button */\n        this.props.detailsToggle ? \n      (<Details \n      wind={this.props.wind}\n      humidity={this.props.humidity}\n      pressure={this.props.pressure}\n      visibility={this.props.visibility}\n      sunrise={this.props.sunrise}\n      sunset={this.props.sunset}\n      />)\n      : \n      (<DetailsToggle \n      detailsToggle={this.props.toggleDetails}\n      city={this.props.city}\n      />)\n      }\n\n      {/*Shows forecast card expanded if clicked, else shows button */\n        this.props.forecastToggle ? \n      <Forecast \n        forecast={this.props.forecast}\n      />\n      :\n      <ForecastToggle \n      forecastToggle={this.props.toggleForecast}\n      updateForecast={this.props.updateForecast}\n      city={this.props.city}\n      updateLoading={this.props.updateLoading}\n      updateError={this.props.updateError}\n      />\n      }\n      \n      <Footer />\n    </div>\n  )\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","const initialState = {\n  \"city\": null,\n  \"datetime\": null,\n  \"currenttemp\": null,\n  \"lowtemp\": null,\n  \"hightemp\": null,\n  \"icon\": null,\n  \"weather\": null,\n  \"wind\": null,\n  \"humidity\": null,\n  \"pressure\": null,\n  \"visibility\": null,\n  \"sunrise\": null,\n  \"sunset\": null,\n  \"input\": \"\",\n  \"error\": false,\n  \"detailsToggle\": false,\n  \"forecastToggle\": false,\n  \"forecast\": [],\n  \"loading\": false,\n  \"errortext\": \"\"\n};\n\nexport default initialState;","import { WEATHER_UPDATE, DETAILS_TOGGLE, FORECAST_TOGGLE, LOADING} from \"../actions/weatherActions\";\nimport initialState from \"./initialState\";\n\nconst weatherReducer = (state = initialState, action) => {\n  switch(action.type){\n    case WEATHER_UPDATE : {\n      return {\n        ...state,\n        city: action.payload.city,\n        datetime: action.payload.datetime,\n        currenttemp: action.payload.currenttemp,\n        lowtemp: action.payload.lowtemp,\n        hightemp: action.payload.hightemp,\n        icon: action.payload.icon,\n        weather: action.payload.weather,\n        wind: action.payload.wind,\n        humidity: action.payload.humidity,\n        pressure: action.payload.pressure,\n        visibility: action.payload.visibility,\n        sunrise: action.payload.sunrise,\n        sunset: action.payload.sunset\n      }\n    }\n    case DETAILS_TOGGLE : {\n      return {\n        ...state,\n      detailsToggle: !state.detailsToggle\n      }\n    }\n    case FORECAST_TOGGLE : {\n      return {\n        ...state,\n        forecastToggle: !state.forecastToggle\n      }\n    }\n    case LOADING : {\n      return {\n        ...state,\n        loading: !state.loading\n      }\n    }\n    default: \n      return state;\n  }\n};\n\nexport default weatherReducer;","import { INPUT_UPDATE, SUBMIT_CLEAR, SEARCH_ERROR, ERROR_TEXT} from \"../actions/weatherActions\";\nimport initialState from \"./initialState\";\n\nconst inputReducer = (state = initialState, action) => {\n  switch(action.type){\n    case INPUT_UPDATE : {\n      return {\n        ...state,\n        input: action.payload.target.value\n      };\n    }\n    case SUBMIT_CLEAR : {\n      return {\n        ...state,\n        input: \"\"\n      };\n    }\n    case SEARCH_ERROR : {\n      return {\n        ...state,\n        error: action.payload\n      };\n    }\n    case ERROR_TEXT : {\n      return{\n        ...state,\n        errortext: action.payload\n      }\n    }\n    default: \n      return state;\n  }\n};\n\nexport default inputReducer;","import { FORECAST_UPDATE } from \"../actions/weatherActions\";\nimport initialState from \"./initialState\";\n\nconst forecastReducer = (state = initialState, action) => {\n  switch(action.type){\n    case FORECAST_UPDATE : {\n      return {\n        ...state,\n        forecast: action.payload\n      }\n    }\n    \n    default: \n      return state;\n  }\n};\n\nexport default forecastReducer;","import { combineReducers } from \"redux\";\nimport weatherReducer from \"./weatherReducer\";\nimport inputReducer from \"./inputReducer\";\nimport forecastReducer from \"./forecastReducer\";\n\nconst rootReducer = combineReducers({\n  weatherReducer: weatherReducer,\n  inputReducer: inputReducer,\n  forecastReducer: forecastReducer\n});\n\nexport default rootReducer;","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers/rootReducer\";\n\nexport const store = createStore(rootReducer);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      //const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      const swUrl = `${process.env.PUBLIC_URL}/sw.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\"\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}